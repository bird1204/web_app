section.filter-section
	.container.is-fluid.filter-group
		= form_tag classification_path, method: :get do
			= hidden_field_tag 'sort_id', params[:sort_id]
			.field.is-horizontal
				.field-label
					label.label 產地
				.field-body
					.field
						.control
							- @areas.each do |area|
								label.checkbox.filter-item
									/ input type="checkbox" name="tag_ids[]" value=i checked=(params[:tag_id].present? ? (params[:tag_id].split(",").include?(i.to_s)):false)
									= check_box_tag 'area_ids[]', area.id, (params[:area_ids] ? (params[:area_ids].include?(area.id.to_s)):false), {multiple: true, onclick: "cal_item_on_area(#{area.id}, #{area.gamaitems.size});", id: "area_ids_" + area.id.to_s}
									= area.name
			- @tags_hash.each do |key, value|	
				.field.is-horizontal
					.field-label
						label.label 
							= key
					.field-body
						.field
							.control
								- value.each do |tag|
									label.checkbox.filter-item
										/ input type="checkbox" name="tag_ids[]" value=i checked=(params[:tag_id].present? ? (params[:tag_id].split(",").include?(i.to_s)):false)
										= check_box_tag 'tag_ids[]', tag.id, (params[:tag_ids] ? (params[:tag_ids].include?(tag.id.to_s)):false), {multiple: true, :onclick => "cal_item_on_filter(#{tag.id}, #{tag.gamaitems.size});", id: "tag_ids_" + tag.id.to_s}
										= tag.name
			.field
				.filter-group-button
					span
						span#total-count
							= @filter_count
						| 件商品符合條件
					= submit_tag "確 認 篩 選", class: "button is-danger filter-group-button-item"
					.button.filter-group-button-item onclick="reset_filter()" 重 置

javascript:

	function cal_item_on_area(id, count) {
		var checkbox_id = 'area_ids_' + id;
		var total_count = parseInt(document.getElementById('total-count').innerHTML);

		if (document.getElementById(checkbox_id).checked) {
	      document.getElementById('total-count').innerHTML = total_count + count;
	  } else {
	      document.getElementById('total-count').innerHTML = total_count - count;
	  }
	}

	function cal_item_on_filter(id, count) {
		var checkbox_id = 'tag_ids_' + id;
		var total_count = parseInt(document.getElementById('total-count').innerHTML);

		if (document.getElementById(checkbox_id).checked) {
	      document.getElementById('total-count').innerHTML = total_count + count;
	  } else {
	      document.getElementById('total-count').innerHTML = total_count - count;
	  }
	}

	function reset_filter() {
		var tag_checkboxes = document.getElementsByName('tag_ids[]');
		for (var i=0, n=tag_checkboxes.length;i<n;i++) {
		    tag_checkboxes[i].checked = false
		}
		var area_checkboxes = document.getElementsByName('area_ids[]');
		for (var i=0, n=area_checkboxes.length;i<n;i++) {
		    area_checkboxes[i].checked = false
		}
		document.getElementById('total-count').innerHTML = 0
	}